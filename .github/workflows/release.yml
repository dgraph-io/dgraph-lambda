# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags: ["v*"]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=tag_name::${GITHUB_REF/refs\/tags\//}
      - name: Build and push Docker images
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@0db984c1826869dcd0740ff26ff75ff543238fd9
        uses: docker/build-push-action@v2.2.1
        with:
          # Builder instance
#           builder: # optional
          # Build's context is the set of files located in the specified PATH or URL
          # context: .
          # Path to the Dockerfile
          # file: ./Dockerfile
          # List of build-time variables
#           build-args: # optional
          # List of metadata for an image
#           labels: # optional
          # List of tags
          tags: dgraph/dgraph-lambda:${{ steps.get_version.outputs.tag_name }}
          # Sets the target stage to build
#           target: # optional
          # List of target platforms for build
#           platforms: # optional
          push: true
          # List of secrets to expose to the build (eg. key=value, GIT_AUTH_TOKEN=mytoken)
#           secrets: # optional
          # GitHub Token used to authenticate against a repository for Git context
          # github-token: ${{ env.GITHUB_TOKEN }} # optional, default is ${{ github.token }}
